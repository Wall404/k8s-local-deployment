apiVersion: v1
kind: Namespace
metadata: 
  name: flask-api-ns

---
apiVersion: v1
kind: Pod
metadata:
  name: data-api
  namespace: flask-api-ns
  labels:
    app: data-api
spec:
  containers:
  - name: data-api
    image: wall404/flask-api:latest
    imagePullPolicy: IfNotPresent
    # args:
    #   - "-text=data-api"
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
    ports:
      - containerPort: 80

# apiVersion: apps/v1
# metadata:
#   labels:
#     app: data-api
#   name: data-api
#   namespace: flask-api-ns
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: data-api
#   template:
#     metadata:
#       labels:
#         app: data-api
#     spec:
#       containers:
#         - name: data-api
#           image: wall404/flask-api:latest
#           imagePullPolicy: IfNotPresent
#           ports:
#             - containerPort: 5000
#               protocol: TCP
#           resources:
#             requests:
#               memory: "64Mi"
#               cpu: "250m"
#             limits:
#               memory: "128Mi"
#               cpu: "500m"
---

apiVersion: v1
kind: Service
metadata:
  # labels:
  #   app: data-api
  namespace: flask-api-ns
  name: data-api-svc
spec:
  # type: NodePort
  selector:
    app: data-api
  ports:
  - port: 80
    # targetPort: 5000
  # externalIPs:
  #   - 192.168.137.67
---

# apiVersion: networking.k8s.io/v1beta1
apiVersion: extensions/v1beta1
kind: Ingress
metadata: 
  name: data-api-ingress
  namespace: flask-api-ns
  annotations:
    # kubernetes.io/ingress.class: "cafe-ingress"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules: 
  # - host: api.swagger.local
  - http:
      paths:
      - path: /data-api
        backend:
          serviceName: data-api-svc
          servicePort: 80